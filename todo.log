We need two stacks named a and b, the stack a have random numbers negative or positives which cannot be duplicated and the stack b needs to be empty.

The goal is to sort in ascending order number into stack a, to do so you have the following operations at your disposal:

(x) sa (sawp a): Swap the first 2 elements at the top of stack a, Do nothing if there is only one or no elements;

(x) sb (sawp b): Swap the first 2 elements at the top of stack b, Do nothing if there is only one or no elements;

(x) ss: sa and sb at the same time;

(x) pa (push a): Take the first element at the top of b and put it at the top of a, Do nothing if b is empty;

(x) pb (push b): Take the first element at the top of a and put it as the top of b, Do nothing if a is empty;

(x) ra (rotate a): Shift up all elements of stack a by 1, the first element becomes the last one;

(x) rb (rotate b): Shift up all elements of stack b by 1; the first element becomes the last one;

(x) rr: ra and rb at the same time;

(x) rra (reverse rotate a): Shift down all elements of stack a by 1, the last element becomes the first one;

(x) rrb (reverse rotate b): Shift down all elements of stack b by 1, the last element becomes the first one;

(x) rrr: rra and rrb at the same time;

- - - - - - - - - - -

Verification:
    - ( ) Don't pass INTMAX / INTMIN » is_int();
    - ( ) Only numbers » atol();
    - ( ) No duplicates » no_duplicates;
	- ( ) max / min;
	- ( ) index med;
	- ( ) data que percorre array e dame o index desse mesmo;
